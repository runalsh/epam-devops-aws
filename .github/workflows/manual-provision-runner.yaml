name: manual provision runner
on: [workflow_dispatch, workflow_call]

jobs:

  deploys3sf:
    name: deploying S3 buckets for runner
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: s3sf
    env:
      ACTION: Init S3 buckets for runner
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
 
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Setup Nodejs
        uses: actions/setup-node@v1  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        run: terraform init
      
      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
        continue-on-error: true
      
      - name: send message to tg
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            *Commit message:* ${{ github.event.commits[0].message }}
            *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
            *Result:* ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            *Action:* ${{ env.ACTION }}
            *Status:* ${{ job.status }}
          format: "markdown"
          disable_web_page_preview: true


  deployrunner:
    needs: deploys3sf
    name: deploying aws runner with terraform 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: selfhostedrunner
    env:
      ACTION: Deploy AWS runner infrastructure with Terraform
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Setup Nodejs
        uses: actions/setup-node@v1    

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        run: terraform init
           
      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan
        continue-on-error: true

      # - name: Terraform Plan Status
        # if: steps.plan.outcome == 'failure'
        # run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: send message to tg
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            *Commit message:* ${{ github.event.commits[0].message }}
            *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
            *Result:* ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            *Action:* ${{ env.ACTION }}
            *Status:* ${{ job.status }}
          format: "markdown"
          disable_web_page_preview: true
        