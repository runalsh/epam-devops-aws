on: [workflow_dispatch, workflow_call]
jobs:
  # update-os:
  #   # The type of runner that the job will run on
  #   runs-on: self-hosted
  #   steps:
  #     - name: Update Ubuntu
  #       run: |
  #         sudo apt-get update -y
  #         sudo apt-get upgrade -y
  # installdocker:
  #   # The type of runner that the job will run on
  #   runs-on: self-hosted
  #   steps:
  #     - name: Install or Update Docker
  #       run: |
  #         if [ -x "$(command -v docker)" ]; then
  #           echo "Update docker"
  #           sudo apt update -y
  #           sudo apt-get --only-upgrade install docker-ce -y
  #         else
  #           echo "Install docker"
  #           sudo apt update
  #           sudo apt upgrade -y
  #           sudo apt-get install apt-transport-https -y
  #           curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  #           sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
  #           sudo apt update
  #           apt-cache policy docker-ce
  #           sudo apt-get install docker-ce -y
  #         fi        
  #     # sudo usermod -aG docker dockeruser
  #     # echo "User jhanley added to docker group. Re-login to assume docker group membership."
        
  # pytest:
  #   runs-on: self-hosted
  #   env:
  #     ACTION: Test Pytest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install pytest
  #       pip install -r ./back/requirements.txt
  #       pip install -r ./front/requirements.txt
  #   - name: Test with pytest back app
  #     working-directory: ./back
  #     run: |
  #       pytest
  #   - name: Test with pytest front app
  #     working-directory: ./front
  #     run: |
  #       pytest

  checkenv:
    name: enviroment check
    runs-on: ubuntu-latest
    steps:
        - name: Print environment variables
          uses: FranzDiebold/github-env-vars-action@v1.2.0
        
          env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          run: |
            echo "GITHUB_REPOSITORY_SLUG=$GITHUB_REPOSITORY_SLUG"
            echo "GITHUB_REPOSITORY_OWNER=$GITHUB_REPOSITORY_OWNER"
            echo "GITHUB_REPOSITORY_OWNER_SLUG=$GITHUB_REPOSITORY_OWNER_SLUG"
            echo "GITHUB_REPOSITORY_NAME=$GITHUB_REPOSITORY_NAME"
            echo "GITHUB_REPOSITORY_NAME_SLUG=$GITHUB_REPOSITORY_NAME_SLUG"
            echo "GITHUB_REF_SLUG=$GITHUB_REF_SLUG"
            echo "GITHUB_REF_NAME=$github_ref_name"
            echo "GITHUB_REF_NAME_SLUG=$github_ref_name_SLUG"
            echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT"   


  sonarcloud:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      ## continue-on-error: true
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: clean
      run: docker rmi $(docker images | grep "^${{ github.sha }}" | awk "{print $3}")