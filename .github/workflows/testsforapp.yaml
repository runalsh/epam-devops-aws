on:
  push:
    branches: [ prod ]
    paths:
      - 'back/**'
  pull_request:
    branches: [ prod ]
    paths:
      - 'back/**'

jobs:
  pytest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    env:
      ACTION: Test Pytest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest
    
    - name: send message to tg
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            ${{ github.actor }} created commit:
            *Commit message:* ${{ github.event.commits[0].message }}
            *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
            *Result:* ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            *Action:* ${{ env.ACTION }}
            *Status:* ${{ job.status }}
        format: "markdown"
        disable_web_page_preview: true
    # - name: Send Gmail notification
    #   if: ${{ failure() }}
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: smtp.yandex.ru
    #     server_port: 465
    #     username: ${{secrets.YANDEX_MAIL_USERNAME}}
    #     password: ${{secrets.YANDEX_MAIL_PASSWORD}}
    #     subject: ${{ github.job }} job has ${{ job.status }}
    #     to: ${{ secrets.MAIL_FOR_INFO }}
    #     from: github action mailer
    #     body: Job of ${{github.repository}} has ${{ job.status }}! *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
 
  bandit:
    runs-on: ubuntu-latest
    needs: pytest
    defaults:
      run:
        working-directory: back
    env:
      ACTION: Test Bandit test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: analyze source code with bandit
      run: |
        bandit -c bandit.yml -s B104,B608,B201,B101 -r .
    
    - name: send message to tg
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            ${{ github.actor }} created commit:
            *Commit message:* ${{ github.event.commits[0].message }}
            *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
            *Result:* ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            *Action:* ${{ env.ACTION }}
            *Status:* ${{ job.status }}
        format: "markdown"
        disable_web_page_preview: true
    
  sonarcloud:
    needs: pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      ## continue-on-error: true
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: back
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - name: send message to tg
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            ${{ github.actor }} created commit:
            *Commit message:* ${{ github.event.commits[0].message }}
            *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
            *Result:* ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            *Action:* ${{ env.ACTION }}
            *Status:* ${{ job.status }}
        format: "markdown"
        disable_web_page_preview: true


  pylint:
    needs: pytest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back    
    env:
      ACTION: Test Linter check
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with pylint
      run: |
        pylint --exit-zero $(ls -R | grep .py$ | xargs)
    
    - name: send message to tg
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
            ${{ github.actor }} created commit:
            *Commit message:* ${{ github.event.commits[0].message }}
            *Repository commit:*  https://github.com/${{ github.repository }}/commit/${{github.sha}}
            *Result:* ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
            *Action:* ${{ env.ACTION }}
            *Status:* ${{ job.status }}
        format: "markdown"
        disable_web_page_preview: true
        